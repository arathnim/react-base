{"content":"<p>Wernicke is a framework made to ease development of parsing languages, such as regular expressions and Instaparse,\nby providing a highly optimized s-expression format to represent common parsing constructs.\nThis core language is fully extensible, the internal functions used to define parsers are exposed.\nWernicke also provides several advanced features, like error handling, custom error formatting, parsing from streams,\nincremental reparsing, and scanning.</p>\n<p>It takes advantage of CL&#39;s flexible type system to give parse results in a natural format, that can be easily\nmanipulated with normal code, and uses CL&#39;s macros to create clean, powerful interfaces to the parsing library.\nSee the examples page for more neat things Wernicke can do, or the tutorials page to get started making a simple\nregex-like parsing language in Wernicke.</p>\n<h4 id=\"installation\">Installation</h4>\n<pre><code>(ql:quickload &#39;wernicke)\n</code></pre>","data":{"title":"Wernicke","summary":"Flexible parsing framework for Common Lisp"},"excerpt":""}