{"content":"<p>What if crypto libraries actually tried to help the developer using them, instead of being an incomprehensible pile of functions?</p>\n<pre><code>(encrypt &quot;attack at dawn&quot; &quot;super secret password&quot;)\n=&gt; &lt;ciphertext&gt;\n\n(decrypt &lt;ciphertext&gt; &quot;super secret password&quot;)\n=&gt; &quot;attack at dawn&quot;\n</code></pre><pre><code>(encrypt &quot;yellow submarine&quot; &quot;letmein&quot; :cipher DES)\nwarning: DES is known to be insecure, consider using a more secure cipher, such as AES\n\n(encrypt &quot;yellow submarine&quot; &quot;letmein&quot; :block-size 64)\nwarning: A block size of 64 is too small to be secure for most ciphers, consider using 256 or 128\n</code></pre><pre><code>(encrypt &quot;attack at dawn&quot; &quot;correct-password&quot;)\n=&gt; &lt;ciphertext&gt;\n\n(decrypt &lt;ciphertext&gt; &quot;incorrect-password&quot;)\nerror: incorrect password or corrupted data\n</code></pre><p>Needs to be able to specify different behaviors for handling information passed with the encryption, e.g. the IV.</p>\n<p>Different library for message auth, more advanced formats?</p>\n<h2 id=\"syntax\">syntax</h2>\n<p>encrypt source key {cipher mode block-size iv nonce padding key-derivation}</p>\n<h2 id=\"functions\">functions</h2>\n<p>random-block [size]</p>\n","data":{"title":"Brassbound, A Usable Crypto Library","date":"January 31st, 2018"},"excerpt":""}